name: Lighthouse CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch: # Allow manual trigger

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        env:
          NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
          NEXT_PUBLIC_SUPABASE_ANON_KEY: test_anon_key
          SUPABASE_SERVICE_ROLE_KEY: test_service_role_key
          OPENROUTER_API_KEY: test_key
          OPENROUTER_API_MODEL: openai/gpt-4o-mini
          OPENROUTER_BASE_URL: https://openrouter.ai/api/v1
          OPENROUTER_MAX_TOKENS: "1024"
        run: npm run build

      - name: Start Next.js server
        env:
          NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
          NEXT_PUBLIC_SUPABASE_ANON_KEY: test_anon_key
          SUPABASE_SERVICE_ROLE_KEY: test_service_role_key
          OPENROUTER_API_KEY: test_key
          OPENROUTER_API_MODEL: openai/gpt-4o-mini
          OPENROUTER_BASE_URL: https://openrouter.ai/api/v1
          OPENROUTER_MAX_TOKENS: "1024"
        run: npm start &

      - name: Wait for server to be ready
        run: |
          echo "Waiting for Next.js server to start..."
          npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: .lighthouseci
          retention-days: 30

      - name: Comment PR with Lighthouse scores
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const fs = require('fs');
              const manifestPath = '.lighthouseci/manifest.json';
              if (fs.existsSync(manifestPath)) {
                const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
                const summary = manifest.map(result => {
                  const scores = result.summary;
                  const perf = Math.round(scores.performance * 100);
                  const a11y = Math.round(scores.accessibility * 100);
                  const bp = Math.round(scores['best-practices'] * 100);
                  const seo = Math.round(scores.seo * 100);
                  return `**${result.url}**\n- Performance: ${perf}\n- Accessibility: ${a11y}\n- Best Practices: ${bp}\n- SEO: ${seo}`;
                }).join('\n\n');
                
                const runUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
                const body = `## ðŸ”¦ Lighthouse CI Results\n\n${summary}\n\n[View full reports](${runUrl})`;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: body
                });
              }
            } catch (error) {
              console.log('Could not post Lighthouse results:', error.message);
            }
